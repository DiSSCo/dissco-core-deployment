apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: default
spec:
  template:
    spec:
      expireAfter: 720h # 30 * 24h = 720h
      requirements:
        - key: kubernetes.io/arch
          operator: In
          values: [ "amd64" ]
        - key: kubernetes.io/os
          operator: In
          values: [ "linux" ]
        - key: karpenter.sh/capacity-type
          operator: In
          values: [ "on-demand" ]
        - key: karpenter.k8s.aws/instance-category
          operator: In
          values: [ "c", "m", "r" ]
        - key: karpenter.k8s.aws/instance-generation
          operator: Gt
          values: [ "2" ]
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: default
  limits:
    cpu: 1000
  disruption:
    consolidationPolicy: WhenEmptyOrUnderutilized
    consolidateAfter: 1m
---
apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: default
spec:
  amiFamily: AL2023
  role: "KarpenterNodeRole-dissco-k8s-production"
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: "dissco-k8s-production"
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery: "dissco-k8s-production"
  amiSelectorTerms:
    - alias: "al2023@latest"
