apiVersion: apps/v1
kind: Deployment
metadata:
  name: datacite-publisher
  labels:
    app: datacite-publisher
spec:
  replicas: 1
  selector:
    matchLabels:
      app: datacite-publisher
  template:
    metadata:
      labels:
        app: datacite-publisher
        language: java
    spec:
      serviceAccountName: secret-manager
      automountServiceAccountToken: false
      containers:
        - name: datacite-publisher
          image: public.ecr.aws/dissco/datacite-publisher:sha-493aaed # Jan-15-2025
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: doi.prefix
              value: '10.3535'
            - name: doi.landing-page-specimen
              value: 'https://disscover.dissco.eu/ds/'
            - name: doi.landing-page-media
              value: 'https://disscover.dissco.eu/dm/'
            - name: spring.security.oauth2.resourceserver.jwt.issuer-uri
              value: https://login-demo.dissco.eu/auth/realms/dissco
            - name: spring.security.oauth2.authorizationserver.endpoint.jwk-set-uri
              value: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
            - name: datacite.repository-id
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: datacite-repository-id
            - name: datacite.password
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: datacite-password
            - name: datacite.endpoint
              value: https://api.datacite.org/dois
            - name: kafka.consumer.topic.specimen
              value: specimen-doi
            - name: kafka.consumer.topic.media
              value: media-doi
            - name: kafka.consumer.topic.tombstone
              value: tombstone
            - name: spring.kafka.bootstrap-servers
              value: kafka-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092
            - name: spring.kafka.consumer.key-deserializer
              value: org.apache.kafka.common.serialization.StringDeserializer
            - name: spring.kafka.consumer.value-deserializer
              value: org.apache.kafka.common.serialization.StringDeserializer
            - name: spring.kafka.consumer.group-id
              value: group
            - name: handle.endpoint
              value: https://api.dissco.eu/doi/v1/records
            - name: logging.level.eu.dissco.core.datacitepublisher
              value: INFO
          resources:
            requests:
              memory: "500Mi"
              cpu: "200m"
              ephemeral-storage: "1Gi"
            limits:
              memory: "500Mi"
              cpu: "200m"
              ephemeral-storage: "1Gi"
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
      volumes:
        - name: aws-secrets
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "aws-secrets"