apiVersion: apps/v1
kind: Deployment
metadata:
  name: dissco-handle-manager-doi-deployment
  labels:
    app: dissco-handle-manager-doi-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dissco-handle-manager-doi
  template:
    metadata:
      labels:
        app: dissco-handle-manager-doi
        language: java
      annotations:
        co.elastic.logs/multiline.pattern: '^[[:space:]]+(at|\.{3})[[:space:]]+\b|^Caused by:'
        co.elastic.logs/multiline.negate: "false"
        co.elastic.logs/multiline.match: after
    spec:
      automountServiceAccountToken: false
      containers:
        - name: dissco-handle-manager
          image: public.ecr.aws/dissco/handle-manager:sha-6d5eec8
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: spring.profiles.active
              value: doi
            - name: spring.security.oauth2.resourceserver.jwt.issuer-uri
              value: https://login-demo.dissco.eu/auth/realms/dissco
            - name: spring.security.oauth2.authorizationserver.endpoint.jwk-set-uri
              value: ${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
            - name: application.ui-url
              value: https://sandbox.dissco.tech
            - name: application.api-url
              value: ${application.ui-url}/api/v1
            - name: application.orchestration-url
              value: https://orchestration.dissco.tech/api/v1
            - name: kafka.publisher.host
              value: kafka-cluster-kafka-bootstrap.kafka.svc.cluster.local:9092
            - name: application.maxHandles
              value: '1000'
            - name: spring.datasource.url
              value: jdbc:postgresql://terraform-20230828064251677200000001.cbppwfnjypll.eu-west-2.rds.amazonaws.com:5432/dissco
            - name: spring.datasource.username
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: db-username
            - name: spring.datasource.password
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: db-password
            - name: application.prefix
              value: SANDBOX
          resources:
            requests:
              memory: "500Mi"
              cpu: "200m"
            limits:
              memory: "500Mi"
              cpu: "750m"
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 45
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 45
            failureThreshold: 2
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false