apiVersion: apps/v1
kind: Deployment
metadata:
  name: dissco-core-annotation-processing-event-auto
  labels:
    app: dissco-core-annotation-processing-event-auto
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dissco-core-annotation-processing-event-auto
  template:
    metadata:
      labels:
        app: dissco-core-annotation-processing-event-auto
        language: java
    spec:
      automountServiceAccountToken: false
      containers:
        - name: dissco-core-annotation-processing-event-auto
          image: public.ecr.aws/dissco/dissco-core-annotation-processing-service:sha-9cd0ad6   # Oct-20-2025
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: spring.profiles.active
              value: rabbitmq-auto
            - name: spring.datasource.url
              value: jdbc:postgresql://terraform-20230828064251677200000001.cbppwfnjypll.eu-west-2.rds.amazonaws.com:5432/dissco
            - name: spring.datasource.username
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: db-username
            - name: spring.datasource.password
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: db-password
            - name: elasticsearch.hostname
              value: elastic-search-es-http.elastic.svc.cluster.local
            - name: elasticsearch.port
              value: "9200"
            - name: elasticsearch.username
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: elastic-username
            - name: elasticsearch.password
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: elastic-password
            - name: elasticsearch.index-name
              value: annotation
            - name: spring.rabbitmq.password
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: rabbitmq-password
            - name: spring.rabbitmq.username
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: rabbitmq-username
            - name: spring.rabbitmq.host
              value: rabbitmq-cluster.rabbitmq.svc.cluster.local
            - name: spring.security.oauth2.resourceserver.jwt.issuer-uri
              value: https://login-demo.dissco.eu/auth/realms/dissco
            - name: token.id
              value: demo-api-client
            - name: token.grantType
              value: client_credentials
            - name: token.secret
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: handle-endpoint-token
            - name: endpoint.handle-endpoint
              value: https://sandbox.dissco.tech/handle-manager/api/pids/v1/
            - name: endpoint.token-endpoint
              value: https://login-demo.dissco.eu/auth/realms/dissco/protocol/openid-connect/token
          resources:
            requests:
              memory: "1Gi"
              cpu: "200m"
            limits:
              memory: "1Gi"
              cpu: "750m"
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 60
            failureThreshold: 2
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: dissco-core-annotation-processing-event-auto-scaled-object
spec:
  scaleTargetRef:
    name: dissco-core-annotation-processing-event-auto
  minReplicaCount: 0
  maxReplicaCount:  2
  triggers:
    - type: rabbitmq
      metadata:
        mode: QueueLength
        value: "1"
        queueName: auto-accepted-annotation-queue
      authenticationRef:
        name: keda-trigger-auth-rabbitmq-conn
