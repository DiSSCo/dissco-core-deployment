apiVersion: apps/v1
kind: Deployment
metadata:
  name: dissco-provenance-service
  labels:
    app: dissco-provenance-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dissco-provenance-service
  template:
    metadata:
      labels:
        app: dissco-provenance-service
        language: java
    spec:
      automountServiceAccountToken: false
      containers:
        - name: dissco-provenance-service
          image: public.ecr.aws/dissco/dissco-core-provenance-service:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          env:
            - name: spring.rabbitmq.password
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: rabbitmq-password
            - name: spring.rabbitmq.username
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: rabbitmq-username
            - name: spring.rabbitmq.host
              value: rabbitmq-cluster.rabbitmq.svc.cluster.local
            - name: mongo.connection-string
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: mongodb-connection
            - name: mongo.database
              value: dissco
            - name: mongo.collection
              value: provenance
          resources:
            requests:
              memory: "500Mi"
              cpu: "200m"
            limits:
              memory: "500Mi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 60
            failureThreshold: 2
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
